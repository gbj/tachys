[package]
name = "hackernews_islands_axum"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
opt-level = 'z'   # CSR only
codegen-units = 1
lto = true

[dependencies]
console_error_panic_hook = "0.1"
cfg-if = "1"
leptos_config = "0.6"
tachys = { path = "../../tachys", features = ["hydration", "islands", "nightly", "web"] }
tachy_reaccy = { path = "../../tachy_reaccy", features = ["miniserde"] }
tachy_route = { path = "../../tachy_route", features = ["reaccy"] }
#tachys = { git = "https://github.com/gbj/tachys", features = ["hydration", "islands", "nightly", "web"] }
#tachy_reaccy = { git = "https://github.com/gbj/tachys", features = ["miniserde"] }
#tachy_route = { git = "https://github.com/gbj/tachys", features = ["reaccy"] }
serde = { version = "1", features = ["derive"] }
reqwest = { version = "0.11", features = ["json"] }
tracing = "0.1"
# openssl = { version = "0.10", features = ["v110"] }
wasm-bindgen = "0.2"
web-sys = { version = "0.3", features = ["AbortController", "AbortSignal"] }
send_wrapper = { version = "0.6.0", features = ["futures"] }
futures = "0.3.30"
axum = { version = "0.7", optional = true, features = ["http2"] }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = [
  "fs",
  "compression-br",
], optional = true }
tokio = { version = "1", features = ["full"], optional = true }
http = { version = "1.0", optional = true }
rust-embed = { version = "8", features = ["axum"], optional = true }
mime_guess = { version = "2.0.4", optional = true }

[features]
default = []
hydrate = []
ssr = ["tachys/tokio", "dep:axum", "dep:http", "dep:tokio", "dep:tower", "dep:tower-http", "dep:rust-embed", "dep:mime_guess"]

[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1

[package.metadata.cargo-all-features]
denylist = ["actix-files", "actix-web", "leptos_actix"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "hackernews_islands_axum"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "./style.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

lib-profile-release = "wasm-release"

[workspace]
